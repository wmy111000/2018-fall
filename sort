#include <iostream>
using namespace std;
template <class Arr>
void swap (Arr arr[],int first, int second)
{
    int temp=arr[first];
    arr[first]=arr[second];
    arr[second]=temp;
}
/***以下为 O(n^2)***/
template <class Arr>
void inssort(Arr a[], int n)
{
    for (int i=1;i<n;i++)
    {
        for (int j=i;(j>0)&&(a[j]>a[j-1]);j--)
        //对比时交换
        //有序序列，两两交换直到遇到比他大的值时停止，这也是区别于冒泡排序的地方
        {
            swap(a,j,j-1);
        }
    }
}
template <class Arr>
void bubsort(Arr a[], int n)
{
    for (int i=0;i<n-1;i++)
        for (int j=n-1;j>i;j--)
        //每组相邻的数字都要进行判断
        {
            if(a[j]<a[j-1])
            {
                swap(a,j,j-1);
            }
        }
}
template <class Arr>
void selsort(Arr a[],int n)
{
    for (int i =0;i<n-1;i++)
    {
        int lowindex=i;
        for (int j=n-1;j>i;j--)
            if (a[j]>a[lowindex])
                lowindex=j;
        swap(a,i,lowindex);
    }
//挑选出最小的索引y

}
/********************************/
/********************************/
/**********shell sort************/
template <class Arr>
void inssort2(Arr a[],int n, int incr)
{
    for(int i =incr;i<n;i+=incr)
        for (int j=i;(j>=incr)&&(a[j]>a[j-incr]);j-=incr)
            swap(a,j,j-incr);
}
template <class Arr>
void shellsort(Arr a[],int n)
{
    for (int i=n/2;i>2;i/=2)
        for (int j=0;j<i;j++)
            inssort2<Arr> (&a[j],n-i,i);
    inssort2<Arr> (a,n,1);
    
}

/*************************************/
/************以下是牛逼的快速排序*********/
/**************first选择轴值************/
template <class Arr>





















int main()
    {
    //int a[]={2,4,1,5};
    //inssort(a,4);
    //bubsort(a,4);
    //selsort(a, 4);
        int a[]={2,52,325,53,87,89,45};
        shellsort(a,7);
    cout<<"排序结果： ";
    for (int i=0;i<7;i++)
    {
        cout<<a[i]<<" " ;
    }
    }
